image: docker:git

stages:
  - build
  - test
  - docs

variables:
  CONTAINER_IMAGE: registry.gitlab.com/rechat/server:$CI_BUILD_REF_NAME
  DOCS_IMAGE: registry.gitlab.com/rechat/server:docs
  POSTGRES_DB: rechat
  POSTGRES_USER: rechat
  POSTGRES_PASSWORD: rechat

before_script:
  - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com

build:
  stage: build
  script:
    - docker build -t $CONTAINER_IMAGE .
    - docker push $CONTAINER_IMAGE

test:
  stage: test
  script:
    - docker run -d -e POSTGRES_DB -e POSTGRES_USER -e POSTGRES_PASSWORD --name db mdillon/postgis:9.6-alpine
    - docker run -d --name redis -p 63799:6379 redis:latest
    - docker cp ./data/minimal.sql db:/minimal.sql
    - docker exec db find /var/run
    - docker exec db sh -c "psql -U $POSTGRES_USER $POSTGRES_DB < /minimal.sql"
    - export REDIS_URL="redis://redis:6379"
    - export DATABASE_URL="postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@db/$POSTGRES_DB"
    - ENVS=`env | sed -n '/^[^\t]/s/=.*//p' | sed '/^$/d' | sed 's/^/-e /g' | tr '\n' ' '`
    - docker run --link db:db --link redis:redis --link db:db $ENVS $CONTAINER_IMAGE npm run coverage
    - docker run --name html --link db:db --link redis:redis --link db:db $ENVS $CONTAINER_IMAGE npm run docs
    - docker cp html:/tmp/rechat /tmp/rechat
    - docker run -d --name docs nginx:alpine
    - docker cp /tmp/rechat docs:/usr/share/nginx/html
    - docker push $DOCS_IMAGE
  after_script:
    - docker kill db
    - docker rm db
    - docker kill redis
    - docker rm redis
